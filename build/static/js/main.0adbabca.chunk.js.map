{"version":3,"sources":["data.js","pages/year-range.jsx","pages/standings.jsx","pages/transactions.jsx","App.jsx","reportWebVitals.js","redux/reducers/standings.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["YEARS","Option","Select","YearRange","filterChange","useState","fromDate","setFromDate","length","toDate","setToDate","values","map","y","value","style","width","defaultValue","onChange","e","marginLeft","Standings","standings","dispatch","useDispatch","setOwners","store","setStore","proxyStore","setProxyStore","useSelector","state","from","to","shallowEqual","columns","name","id","dataIndex","formatter","text","Number","toLocaleString","useEffect","fetch","then","response","json","data","Promise","all","year","obj","console","log","catch","error","teams","forEach","season","row","owners","team","pointsFor","pointsAgainst","wins","losses","games","playoffWins","playoffLosses","playoffGames","championships","owner","displayName","key","recordOverall","recordPostseason","rank","Object","filterData","years","type","sort","pagination","Transactions","Component","Header","Layout","Content","Footer","App","height","className","float","color","fontSize","marginRight","theme","mode","defaultSelectedKeys","Item","pathname","padding","exact","path","render","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","combineReducers","action","ADD_STANDING","payload","createStore","rootReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0adbabca.chunk.js","sourcesContent":["export const YEARS = [\r\n  2008,\r\n  2009,\r\n  2010,\r\n  2011,\r\n  2012,\r\n  2013,\r\n  2014,\r\n  2015,\r\n  2016,\r\n  2017,\r\n  2018,\r\n  2020,\r\n];\r\n","import { Select } from 'antd'\r\nimport { YEARS } from '../data'\r\nimport { useState } from 'react'\r\n\r\nconst { Option } = Select\r\n\r\nexport const YearRange = ({ filterChange }) => {\r\n  const [fromDate, setFromDate] = useState(YEARS[0])\r\n  const [toDate, setToDate] = useState(YEARS[YEARS.length - 1])\r\n\r\n  const values = YEARS.map((y) => (\r\n    <Option value={y} key={y}>\r\n      {y}\r\n    </Option>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      <span>From: </span>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        defaultValue={fromDate}\r\n        onChange={(e) => {\r\n          setFromDate(e)\r\n          filterChange(e, toDate)\r\n        }}\r\n      >\r\n        {values}\r\n      </Select>\r\n      <span style={{ marginLeft: '1em' }}>To: </span>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        defaultValue={toDate}\r\n        onChange={(e) => {\r\n          setToDate(e)\r\n          filterChange(fromDate, e)\r\n        }}\r\n      >\r\n        {values}\r\n      </Select>\r\n    </>\r\n  )\r\n}\r\n","import 'gridjs/dist/theme/mermaid.css'\r\n\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { Grid } from 'gridjs-react'\r\nimport { YEARS } from 'data'\r\nimport { YearRange } from './year-range'\r\n\r\nexport const Standings = ({ standings }) => {\r\n  const dispatch = useDispatch()\r\n  const [owners, setOwners] = useState({})\r\n  const [store, setStore] = useState([])\r\n  const [proxyStore, setProxyStore] = useState([])\r\n\r\n  const { from, to } = useSelector(\r\n    (state) => ({\r\n      from: state.standings.from,\r\n      to: state.standings.to\r\n    }),\r\n    shallowEqual\r\n  )\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Owner',\r\n      id: 'owner'\r\n    },\r\n    {\r\n      name: 'Points For',\r\n      id: 'pointsFor',\r\n      dataIndex: 'pointsFor',\r\n      formatter: (text) => Number(text).toLocaleString()\r\n    },\r\n    {\r\n      name: 'Points Against',\r\n      id: 'pointsAgainst',\r\n      dataIndex: 'pointsAgainst',\r\n      formatter: (text) => Number(text).toLocaleString()\r\n    },\r\n    {\r\n      name: 'Wins',\r\n      id: 'wins'\r\n    },\r\n    {\r\n      name: 'Losses',\r\n      id: 'losses'\r\n    },\r\n    {\r\n      name: 'Games',\r\n      id: 'games'\r\n    },\r\n    {\r\n      name: 'Playoff Wins',\r\n      id: 'playoffWins'\r\n    },\r\n    {\r\n      name: 'Playoff Losses',\r\n      id: 'playoffLosses'\r\n    },\r\n    {\r\n      name: 'Playoff Games',\r\n      id: 'playoffGames'\r\n    },\r\n    {\r\n      name: 'Championships',\r\n      id: 'championships'\r\n    }\r\n  ]\r\n\r\n  function filterData() {\r\n    const teams = {}\r\n    console.log(store)\r\n    store.forEach((season) => {\r\n      season.forEach((row) => {\r\n        if (row.year < from || row.year > to) {\r\n          return\r\n        }\r\n        const id = row.owners[0].id\r\n        const team = teams[id] || {\r\n          pointsFor: 0,\r\n          pointsAgainst: 0,\r\n          wins: 0,\r\n          losses: 0,\r\n          games: 0,\r\n          playoffWins: 0,\r\n          playoffLosses: 0,\r\n          playoffGames: 0,\r\n          championships: 0,\r\n          owner: row.owners[0].displayName,\r\n          key: id\r\n        }\r\n        teams[id] = team\r\n\r\n        team.pointsFor += row.pointsFor.value\r\n        team.pointsAgainst += row.pointsAgainst.value\r\n        team.wins += row.recordOverall.wins || 0\r\n        team.losses += row.recordOverall.losses || 0\r\n        team.playoffWins += row.recordPostseason.wins || 0\r\n        team.playoffLosses += row.recordPostseason.losses || 0\r\n        team.games = team.wins + team.losses\r\n        team.playoffGames = team.playoffWins + team.playoffLosses\r\n        if (row.recordOverall.rank === 1) {\r\n          team.championships += 1\r\n        }\r\n      })\r\n    })\r\n\r\n    setProxyStore(Object.values(teams))\r\n  }\r\n\r\n  function onChange(pagination, filters, sorter, extra) {\r\n    // console.log('params', pagination, filters, sorter, extra)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/data/owners.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOwners(data)\r\n      })\r\n      .then(() => {\r\n        Promise.all(\r\n          YEARS.map((year) =>\r\n            fetch(`/data/standings/${year}.json?year=${year}`)\r\n              .then((response) => response.json())\r\n              .then((json) =>\r\n                json.map((obj) => {\r\n                  obj.year = year\r\n                  return obj\r\n                })\r\n              )\r\n          )\r\n        )\r\n          .then((json) => {\r\n            setStore(json)\r\n            console.log(json)\r\n          })\r\n          .catch((error) => console.log(error))\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (store.length > 0) {\r\n      filterData()\r\n    }\r\n  }, [store, years])\r\n\r\n  return (\r\n    <>\r\n      <YearRange filterChange={(from, to) => dispatch({ type: from, to })} />\r\n      <hr />\r\n      <Grid data={proxyStore} columns={columns} sort={true} pagination={true} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Standings\r\n","import { Component } from 'react';\r\n\r\nexport default class Transactions extends Component {\r\n  render() {\r\n    return <span>Transactions</span>;\r\n  }\r\n}\r\n","import './App.css'\r\n\r\nimport { Layout, Menu } from 'antd'\r\nimport {\r\n  NavLink,\r\n  Redirect,\r\n  Route,\r\n  HashRouter as Router,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\nimport React from 'react'\r\nimport Standings from 'pages/standings'\r\nimport Transactions from 'pages/transactions'\r\n\r\nconst { Header, Content, Footer } = Layout\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout style={{ height: '100vh' }} className=\"layout\">\r\n        <Header>\r\n          <span\r\n            style={{\r\n              float: 'left',\r\n              color: 'white',\r\n              fontSize: '1.5em',\r\n              marginRight: '10px',\r\n            }}\r\n          >\r\n            Fantasy Dutchmen\r\n          </span>\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            <Menu.Item key=\"standings\">\r\n              <NavLink to={{ pathname: '/standings' }}> Standings </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"transactions\">\r\n              <NavLink to={{ pathname: '/transactions' }}>\r\n                {' '}\r\n                Transactions{' '}\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '50px' }}>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/standings\" />} />\r\n            <Route path=\"/standings\">\r\n              <Standings />\r\n            </Route>\r\n            <Route path=\"/transactions\">\r\n              <Transactions />\r\n            </Route>\r\n          </Switch>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}></Footer>\r\n      </Layout>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { STANDINGS_YEARS } from '../actionTypes'\r\n\r\nconst defaultState = {\r\n  standings: {\r\n    store: [],\r\n    from: 2008,\r\n    to: 2020\r\n  }\r\n}\r\n\r\nexport default function standings(state = defaultState, action) {\r\n  if (action.type == ADD_STANDING) {\r\n    return {\r\n      ...state,\r\n      standings: {\r\n        from: state.standings.from,\r\n        to: state.standings.to,\r\n        store: [...state.standings.store, { ...action.payload }]\r\n      }\r\n    }\r\n  }\r\n\r\n  if (action.type == STANDINGS_YEARS) {\r\n  }\r\n\r\n  return state\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport standings from './standings'\r\n\r\nexport default combineReducers({ standings })\r\n","import { createStore } from '@reduxjs/toolkit'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","import './index.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}
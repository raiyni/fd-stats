{"version":3,"sources":["data.js","pages/year-range.jsx","pages/standings.jsx","pages/transactions.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["YEARS","Option","Select","YearRange","filterChange","useState","fromDate","setFromDate","length","toDate","setToDate","values","map","y","value","style","width","defaultValue","onChange","e","marginLeft","Standings","setOwners","store","setStore","proxyStore","setProxyStore","from","to","years","setYears","columns","name","id","dataIndex","formatter","text","Number","toLocaleString","useEffect","fetch","then","response","json","data","Promise","all","year","obj","console","log","catch","error","teams","forEach","season","row","owners","team","pointsFor","pointsAgainst","wins","losses","games","playoffWins","playoffLosses","playoffGames","championships","owner","displayName","key","recordOverall","recordPostseason","rank","Object","filterData","sort","pagination","Transactions","Component","Header","Layout","Content","Footer","App","height","className","float","color","fontSize","marginRight","theme","mode","defaultSelectedKeys","Item","pathname","padding","exact","path","render","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e9c9de34.chunk.js","sourcesContent":["export const YEARS = [\r\n  2008,\r\n  2009,\r\n  2010,\r\n  2011,\r\n  2012,\r\n  2013,\r\n  2014,\r\n  2015,\r\n  2016,\r\n  2017,\r\n  2018,\r\n  2020,\r\n];\r\n","import { Select } from 'antd'\r\nimport { YEARS } from '../data'\r\nimport { useState } from 'react'\r\n\r\nconst { Option } = Select\r\n\r\nexport const YearRange = ({ filterChange }) => {\r\n  const [fromDate, setFromDate] = useState(YEARS[0])\r\n  const [toDate, setToDate] = useState(YEARS[YEARS.length - 1])\r\n\r\n  const values = YEARS.map((y) => (\r\n    <Option value={y} key={y}>\r\n      {y}\r\n    </Option>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      <span>From: </span>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        defaultValue={fromDate}\r\n        onChange={(e) => {\r\n          setFromDate(e)\r\n          filterChange(e, toDate)\r\n        }}\r\n      >\r\n        {values}\r\n      </Select>\r\n      <span style={{ marginLeft: '1em' }}>To: </span>\r\n      <Select\r\n        style={{ width: 120 }}\r\n        defaultValue={toDate}\r\n        onChange={(e) => {\r\n          setToDate(e)\r\n          filterChange(fromDate, e)\r\n        }}\r\n      >\r\n        {values}\r\n      </Select>\r\n    </>\r\n  )\r\n}\r\n","import 'gridjs/dist/theme/mermaid.css'\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { Grid } from 'gridjs-react'\r\nimport { YEARS } from 'data.js'\r\nimport { YearRange } from './year-range'\r\n\r\nexport default function Standings() {\r\n  const [owners, setOwners] = useState({})\r\n  const [store, setStore] = useState([])\r\n  const [proxyStore, setProxyStore] = useState([])\r\n  const [years, setYears] = useState({\r\n    from: YEARS[0],\r\n    to: YEARS[YEARS.length - 1],\r\n  })\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Owner',\r\n      id: 'owner',\r\n    },\r\n    {\r\n      name: 'Points For',\r\n      id: 'pointsFor',\r\n      dataIndex: 'pointsFor',\r\n      formatter: (text) => Number(text).toLocaleString(),\r\n    },\r\n    {\r\n      name: 'Points Against',\r\n      id: 'pointsAgainst',\r\n      dataIndex: 'pointsAgainst',\r\n      formatter: (text) => Number(text).toLocaleString(),\r\n    },\r\n    {\r\n      name: 'Wins',\r\n      id: 'wins',\r\n    },\r\n    {\r\n      name: 'Losses',\r\n      id: 'losses',\r\n    },\r\n    {\r\n      name: 'Games',\r\n      id: 'games',\r\n    },\r\n    {\r\n      name: 'Playoff Wins',\r\n      id: 'playoffWins',\r\n    },\r\n    {\r\n      name: 'Playoff Losses',\r\n      id: 'playoffLosses',\r\n    },\r\n    {\r\n      name: 'Playoff Games',\r\n      id: 'playoffGames',\r\n    },\r\n    {\r\n      name: 'Championships',\r\n      id: 'championships',\r\n    },\r\n  ]\r\n\r\n  function filterData() {\r\n    const teams = {}\r\n    console.log(store)\r\n    store.forEach((season) => {\r\n      season.forEach((row) => {\r\n        if (row.year < years.from || row.year > years.to) {\r\n          return\r\n        }\r\n\r\n        const id = row.owners[0].id\r\n        const team = teams[id] || {\r\n          pointsFor: 0,\r\n          pointsAgainst: 0,\r\n          wins: 0,\r\n          losses: 0,\r\n          games: 0,\r\n          playoffWins: 0,\r\n          playoffLosses: 0,\r\n          playoffGames: 0,\r\n          championships: 0,\r\n          owner: row.owners[0].displayName,\r\n          key: id,\r\n        }\r\n        teams[id] = team\r\n\r\n        team.pointsFor += row.pointsFor.value\r\n        team.pointsAgainst += row.pointsAgainst.value\r\n        team.wins += row.recordOverall.wins || 0\r\n        team.losses += row.recordOverall.losses || 0\r\n        team.playoffWins += row.recordPostseason.wins || 0\r\n        team.playoffLosses += row.recordPostseason.losses || 0\r\n        team.games = team.wins + team.losses\r\n        team.playoffGames = team.playoffWins + team.playoffLosses\r\n        if (row.recordOverall.rank === 1) {\r\n          team.championships += 1\r\n        }\r\n      })\r\n    })\r\n\r\n    setProxyStore(Object.values(teams))\r\n  }\r\n\r\n  function onChange(pagination, filters, sorter, extra) {\r\n    // console.log('params', pagination, filters, sorter, extra)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/data/owners.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOwners(data)\r\n      })\r\n      .then(() => {\r\n        Promise.all(\r\n          YEARS.map((year) =>\r\n            fetch(`/data/standings/${year}.json?year=${year}`)\r\n              .then((response) => response.json())\r\n              .then((json) =>\r\n                json.map((obj) => {\r\n                  obj.year = year\r\n                  return obj\r\n                }),\r\n              ),\r\n          ),\r\n        )\r\n          .then((json) => {\r\n            setStore(json)\r\n            console.log(json)\r\n          })\r\n          .catch((error) => console.log(error))\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(years)\r\n  }, [years])\r\n\r\n  useEffect(() => {\r\n    if (store.length > 0) {\r\n      filterData()\r\n    }\r\n  }, [store, years])\r\n\r\n  return (\r\n    <>\r\n      <YearRange\r\n        filterChange={(from, to) => setYears({ from: from, to: to })}\r\n      />\r\n      <hr />\r\n      <Grid data={proxyStore} columns={columns} sort={true} pagination={true} />\r\n    </>\r\n  )\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport default class Transactions extends Component {\r\n  render() {\r\n    return <span>Transactions</span>;\r\n  }\r\n}\r\n","import './App.css'\n\nimport { Layout, Menu } from 'antd'\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch,\n} from 'react-router-dom'\n\nimport React from 'react'\nimport Standings from 'pages/standings'\nimport Transactions from 'pages/transactions'\n\nconst { Header, Content, Footer } = Layout\n\nfunction App() {\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }} className=\"layout\">\n        <Header>\n          <span\n            style={{\n              float: 'left',\n              color: 'white',\n              fontSize: '1.5em',\n              marginRight: '10px',\n            }}\n          >\n            Fantasy Dutchmen\n          </span>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n            <Menu.Item key=\"standings\">\n              <NavLink to={{ pathname: '/standings' }}> Standings </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"transactions\">\n              <NavLink to={{ pathname: '/transactions' }}>\n                {' '}\n                Transactions{' '}\n              </NavLink>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '50px' }}>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/standings\" />} />\n            <Route path=\"/standings\">\n              <Standings />\n            </Route>\n            <Route path=\"/transactions\">\n              <Transactions />\n            </Route>\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}></Footer>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}